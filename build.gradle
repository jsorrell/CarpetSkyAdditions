import java.text.SimpleDateFormat

plugins {
  id 'fabric-loom' version '0.12-SNAPSHOT'
  id 'maven-publish'
}

repositories {
  maven {
    url 'https://masa.dy.fi/maven'
  }
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-" + project.mod_version

loom {
  accessWidenerPath = file("src/main/resources/skyblock.accesswidener")
}

dependencies {
  //to change the versions see the gradle.properties file
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
  modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
  modImplementation "carpet:fabric-carpet:${project.carpet_core_version}"

  modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

  // javax.annotation.Nullable/Nonnull
  compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

task zipTranslationPack(type: Zip) {
  archiveFileName = project.archives_base_name + "-" + project.version + ".translations.zip"
  group = "build"
  destinationDirectory = file("$buildDir/")
  from files('./datapack-translations')
}

task embedDatapack(type: Copy) {
  from './datapack'
  into "$buildDir/generated/resources/resourcepacks/${project.datapack_name}"
}

task fillBuildTemplate(type: Copy) {
  def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'")
  df.setTimeZone(TimeZone.getTimeZone("UTC"))
  def templateContext = [
    id                    : project.mod_id,
    name                  : project.mod_name,
    version               : project.version,
    timestamp             : df.format(new Date()),
    minecraft_version     : project.minecraft_version,
    yarn_mappings         : project.yarn_mappings,
    embedded_datapack_name: project.datapack_name,
  ]
  inputs.properties templateContext
  from 'src/template/java'
  into "$buildDir/generated/java"
  expand templateContext
}

sourceSets.main.resources.srcDir "$buildDir/generated/resources"
processResources.dependsOn embedDatapack

sourceSets.main.java.srcDir "$buildDir/generated/java"
compileJava.dependsOn fillBuildTemplate

processResources {
  def templateContext = [
    id     : project.mod_id,
    name   : project.mod_name,
    version: project.version
  ]

  inputs.properties templateContext

  // replace stuff in fabric.mod.json, nothing else
  from(sourceSets.main.resources.srcDirs) {
    include "fabric.mod.json"
    expand templateContext
  }

  from(sourceSets.main.resources.srcDirs) {
    exclude "fabric.mod.json"
  }

  duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
compileJava.options.encoding = "UTF-8"

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
//task sourcesJar(type: Jar, dependsOn: classes) {
//	from sourceSets.main.allSource
//}

jar {
  from "LICENSE"
}
